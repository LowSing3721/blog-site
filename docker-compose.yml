version: '3'

volumes:
  mysql_vol:
  redis_vol:
  static_vol:

networks:
  nginx_network:
    driver: bridge
  mysql_network:
    driver: bridge
  redis_network:
    driver: bridge

services:
  mysql:
    image: mysql:8.0.25
    volumes:
      - mysql_vol:/var/lib/mysql:rw
      - ./compose/mysql/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./compose/mysql/init:/docker-entrypoint-initdb.d
    env_file:
      - compose/mysql/.env
    networks:
      - mysql_network
    ports:
      - "3306:3306"
    restart: always

  nginx:
    image: nginx:1.20.0
    volumes:
      - static_vol:/usr/share/nginx/html/static
      - ./compose/nginx/blogsite.conf:/etc/nginx/conf.d/blogsite.conf
      - ./compose/nginx/log:/var/log/nginx
      - ./compose/nginx/ssl:/usr/share/nginx/ssl
    networks:
      - nginx_network
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    expose:
      - "80"
    restart: always
    command: ["nginx", "-g", "daemon off;"]

  redis:
    image: redis:6.0.13
    volumes:
    - redis_vol:/data
    - ./compose/redis/redis.conf:/etc/redis/redis.conf
    networks:
      - redis_network
    ports:
    - "6379:6379"
    restart: always
    command: ["redis-server", "/etc/redis/redis.conf"]

  web:
    build: ./blogsite
    container_name: blogsite
    volumes:
      - static_vol:/var/www/html/blogsite/static
      - ./blogsite:/var/www/html/blogsite
    networks:
      - mysql_network
      - nginx_network
      - redis_network
    depends_on:
      - mysql
    expose:
      - "8000"
    restart: always
    tty: true
    stdin_open: true
